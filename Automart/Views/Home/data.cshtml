@{
    ViewData["Title"] = "Cars Data";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewData["Title"] - AutoDeals</title>
    <link rel="stylesheet" href="~/css/styles.css" />
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
</head>
<body>
    <nav>
        <div class="logo-container">
            <img src="~/images/logo.png" alt="AutoDeals Logo">
        </div>
        <ul class="nav-links">
            <li><a asp-controller="Home" asp-action="Index">Home</a></li>
            <li><a asp-controller="Home" asp-action="Data" class="active">Cars Data</a></li>
            <li><a asp-controller="Home" asp-action="Create">Create Posting</a></li>
            <li><a asp-controller="Home" asp-action="Read">Review Posting</a></li>
            <li><a asp-controller="Home" asp-action="Update">Modify Posting</a></li>
            <li><a asp-controller="Home" asp-action="Delete">Delete Posting</a></li>
            <li><a asp-controller="Home" asp-action="About">About Us</a></li>
        </ul>
        <div class="auth-links">
            <a asp-controller="Home" asp-action="SignIn">Sign In</a>
            <a asp-controller="Home" asp-action="SignUp">Sign Up</a>
        </div>
    </nav>

    <main>
        <h2 style="text-align:center;">Car Insights Dashboard</h2>

        <section>
            <h3>Car Listings by Brand</h3>
            <select id="brandSelect">
                <option value="all">All Brands</option>
            </select>
            <canvas id="barChart" style="max-width: 600px; height: 300px;"></canvas>
        </section>

        <section style="display: flex; flex-direction: column; align-items: flex-start; margin-bottom: 20px;">
            <h3 style="margin-bottom: 10px;">Fuel Type Distribution</h3>
            <div style="width: 400px; height: 300px;">
                <canvas id="pieChart" style="width: 100%; height: 100%;"></canvas>
            </div>
        </section>

        <section>
            <h3>Inventory by Year</h3>
            <canvas id="inventoryChart" style="max-width: 600px; height: 300px;"></canvas>
        </section>
    </main>

    <footer>
        <p>&copy; 2025 AutoDeals | All rights reserved</p>
    </footer>

    <script>
        let barChart, pieChart, inventoryChart;

        fetch("/CarListing/GetAllCars")
            .then(res => res.json())
            .then(data => {
                const brandCounts = {};
                const fuelCounts = {};
                const yearCounts = {};

                data.forEach(car => {
                    const brand = car.brand;
                    brandCounts[brand] = (brandCounts[brand] || 0) + 1;

                    const fuel = car.fuelType;
                    fuelCounts[fuel] = (fuelCounts[fuel] || 0) + 1;

                    const year = car.year;
                    yearCounts[year] = (yearCounts[year] || 0) + 1;
                });

                // --- Brand Bar Chart ---
                const brandLabels = Object.keys(brandCounts);
                const brandData = brandLabels.map(b => brandCounts[b]);

                barChart = new Chart(document.getElementById('barChart'), {
                    type: 'bar',
                    data: {
                        labels: brandLabels,
                        datasets: [{
                            label: 'Listings Available',
                            data: brandData,
                            backgroundColor: getColorPalette(brandLabels.length)
                        }]
                    },
                    options: {
                        responsive: true,
                        scales: { y: { beginAtZero: true } }
                    }
                });

                const brandSelect = document.getElementById('brandSelect');
                brandLabels.forEach(b => {
                    const option = document.createElement("option");
                    option.value = b;
                    option.textContent = b;
                    brandSelect.appendChild(option);
                });

                brandSelect.addEventListener('change', function () {
                    const selected = this.value;
                    if (selected === 'all') {
                        barChart.data.labels = brandLabels;
                        barChart.data.datasets[0].data = brandData;
                    } else {
                        const index = brandLabels.indexOf(selected);
                        barChart.data.labels = [brandLabels[index]];
                        barChart.data.datasets[0].data = [brandData[index]];
                    }
                    barChart.update();
                });

                // --- Fuel Pie Chart ---
                const fuelLabels = Object.keys(fuelCounts);
                const fuelData = fuelLabels.map(f => fuelCounts[f]);

                pieChart = new Chart(document.getElementById('pieChart'), {
                    type: 'pie',
                    data: {
                        labels: fuelLabels,
                        datasets: [{
                            data: fuelData,
                            backgroundColor: getColorPalette(fuelLabels.length)
                        }]
                    },
                    options: { responsive: true }
                });

                // --- Year Line Chart ---
                const yearLabels = Object.keys(yearCounts).sort();
                const yearData = yearLabels.map(y => yearCounts[y]);

                inventoryChart = new Chart(document.getElementById('inventoryChart'), {
                    type: 'line',
                    data: {
                        labels: yearLabels,
                        datasets: [{
                            label: 'Cars in Inventory',
                            data: yearData,
                            borderColor: '#2196f3',
                            fill: false,
                            tension: 0.3
                        }]
                    },
                    options: {
                        responsive: true,
                        scales: { y: { beginAtZero: true } }
                    }
                });
            })
            .catch(err => console.error("Failed to load chart data:", err));

        // Ensure unique colors
        function getColorPalette(n) {
            const baseColors = [
                '#f44336', '#2196f3', '#4caf50', '#ff9800', '#9c27b0',
                '#795548', '#607d8b', '#00bcd4', '#e91e63', '#cddc39'
            ];
            const result = [];
            for (let i = 0; i < n; i++) {
                result.push(baseColors[i % baseColors.length]);
            }
            return result;
        }
    </script>
</body>
</html>