@using Automart.Models

@{
    ViewData["Title"] = "User Home";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - AutoMart</title>
    <link rel="stylesheet" href="@Url.Content("~/css/styles.css")" />
    <style>
        body {
            margin: 0;
            font-family: 'Segoe UI', sans-serif;
            background: #f3f3f3;
        }

        nav {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding: 10px 5%;
            background-color: #222;
            color: white;
        }

            nav ul {
                list-style: none;
                display: flex;
                gap: 20px;
                margin: 0;
                padding: 0;
            }

            nav li a {
                color: white;
                text-decoration: none;
                font-weight: bold;
            }

        .location-box {
            display: flex;
            align-items: center;
            gap: 10px;
        }

            .location-box input {
                padding: 6px 10px;
                border-radius: 4px;
                border: none;
            }

        .hero {
            background: url('/images/cover.jpg') no-repeat center center/cover;
            color: white;
            text-align: center;
            padding: 100px 20px 60px;
        }

            .hero h1 {
                font-size: 2.8rem;
                margin-bottom: 10px;
                text-shadow: 1px 1px 3px black;
            }

        .search-wrapper {
            margin: 20px auto 0;
            display: flex;
            background: white;
            border-radius: 40px;
            max-width: 600px;
            align-items: center;
            padding: 8px 16px;
            gap: 10px;
        }

            .search-wrapper input {
                border: none;
                outline: none;
                font-size: 1rem;
                flex: 1;
            }

        .filter-toggle {
            border: none;
            background: transparent;
            font-weight: bold;
            padding: 6px 12px;
            border-radius: 20px;
            cursor: pointer;
        }

            .filter-toggle.active {
                background: #007bff;
                color: white;
            }

        .filter-container {
            display: flex;
            flex-wrap: wrap;
            justify-content: center;
            gap: 20px;
            background: white;
            padding: 20px;
            border-radius: 10px;
            margin: 30px auto;
            max-width: 1100px;
        }

            .filter-container select, .price-range-slider input {
                padding: 6px;
                border-radius: 4px;
            }

        .price-range-slider {
            display: flex;
            flex-direction: column;
            width: 230px;
        }

        .range-inputs input {
            width: 100%;
        }

        .range-labels {
            display: flex;
            justify-content: space-between;
            font-size: 0.85rem;
        }

        .section-title {
            text-align: center;
            margin: 40px 0 10px;
            font-size: 1.5rem;
        }

        .car-listing, .featured-scroll {
            display: flex;
            overflow-x: auto;
            gap: 16px;
            padding: 10px 20px;
        }

        .car-card {
            background: white;
            border-radius: 10px;
            padding: 10px;
            width: 200px;
            box-shadow: 0 2px 6px rgba(0,0,0,0.1);
            text-align: center;
            flex-shrink: 0;
        }

            .car-card img {
                width: 100%;
                height: 120px;
                object-fit: cover;
                border-radius: 6px;
            }

        .announcement-carousel {
            text-align: center;
            padding: 20px;
            font-size: 1rem;
            background: #f9f9f9;
            border-top: 1px solid #ddd;
            color: #333;
        }

        footer {
            background: #222;
            color: #aaa;
            text-align: center;
            padding: 20px;
        }
    </style>
</head>
<body>
    <nav>
        <ul>
            <li><img src="/images/logo.png" alt="Logo" height="30" /></li>
            <li><a href="#">New Cars</a></li>
            <li><a href="#">Used Cars</a></li>
        </ul>
        <div class="location-box">
            <input id="locationInput" placeholder="Enter city..." />
            <img src="https://static.vecteezy.com/system/resources/previews/026/530/176/non_2x/map-pin-and-shadow-current-location-information-vector.jpg"
                 alt="Detect Location" width="25" onclick="getUserLocation()" />
        </div>
        <ul class="nav-links">
            <li><a asp-controller="Home" asp-action="UserHome">User Home</a></li>
			<li><a asp-controller="Home" asp-action="Viewcars">View Cars</a></li>

        </ul>
    </nav>

    <section class="hero">
        <h1>Discover Your Next Car</h1>
        <div class="search-wrapper">
            <button id="btnNew" class="filter-toggle active">New</button>
            <button id="btnUsed" class="filter-toggle">Used</button>
            <input type="text" id="search-input" placeholder="Search by brand, model, or fuel..." />
        </div>
    </section>

    <section class="filter-container">
        <select id="budget">
            <option value="">Select Budget</option>
            <option value="10000">Under $10,000</option>
            <option value="15000">Under $15,000</option>
            <option value="20000">Under $20,000</option>
            <option value="30000">Under $30,000</option>
        </select>

        <select id="type">
            <option value="">Type</option>
            <option value="SUV">SUV</option>
            <option value="Sedan">Sedan</option>
            <option value="Hatchback">Hatchback</option>
        </select>

        <select id="fuel">
            <option value="">Fuel Type</option>
            <option value="Gasoline">Gasoline</option>
            <option value="Diesel">Diesel</option>
            <option value="Electric">Electric</option>
        </select>

        <div class="price-range-slider">
            <div class="range-labels">
                <span id="rangeMinLabel">$0</span>
                <span id="rangeMaxLabel">$80,000</span>
            </div>
            <div class="range-inputs">
                <input type="range" id="rangeMin" min="0" max="80000" value="0" />
                <input type="range" id="rangeMax" min="0" max="80000" value="80000" />
            </div>
        </div>
    </section>

    <section class="section-title">Available Cars</section>
    <section class="car-listing" id="car-list"></section>

    <section class="section-title">Featured Cars</section>
    <section class="featured-scroll" id="featuredCars"></section>

    <section class="section-title">SUVs & Sedans</section>
    <section class="featured-scroll" id="carCategories"></section>

    <section class="announcement-carousel" id="adContent">🚗 Big Sale on SUVs this weekend!</section>

    <footer>&copy; 2025 AutoMart</footer>

    <script>
        const carListContainer = document.getElementById("car-list");
        const searchInput = document.getElementById("search-input");
        const btnNew = document.getElementById("btnNew");
        const btnUsed = document.getElementById("btnUsed");
        const budgetSelect = document.getElementById("budget");
        const typeSelect = document.getElementById("type");
        const fuelSelect = document.getElementById("fuel");
        const rangeMinInput = document.getElementById("rangeMin");
        const rangeMaxInput = document.getElementById("rangeMax");
        const rangeMinLabel = document.getElementById("rangeMinLabel");
        const rangeMaxLabel = document.getElementById("rangeMaxLabel");

        fetch("/data/cars.json")
            .then(res => res.json())
            .then(data => {
                carsData = data;
                renderFeatured(data.slice(0, 4));
                renderCategories(data.filter(c => c.type.includes("SUV") || c.type.includes("Sedan")));
                renderBrands(data);
                renderCars(data); // initial load
            });

        function carCard(car) {
            return `
              <div class="car-card">
                <img src="${car.photos[0]}" alt="${car.brand}" />
                <h4>${car.brand} ${car.model} (${car.year})</h4>
                <p>Fuel: ${car.fuelType}</p>
                <p>$${car.price.toLocaleString()}</p>
              </div>`;
        }

        function renderCars(list) {
            carListContainer.innerHTML = list.length ? list.map(carCard).join("") : "<p>No matching cars found.</p>";
        }

        function renderFeatured(list) {
            document.getElementById("featuredCars").innerHTML = list.map(carCard).join("");
        }

        function renderCategories(list) {
            document.getElementById("carCategories").innerHTML = list.map(carCard).join("");
        }

        function renderBrands(data) {
            const brands = [...new Set(data.map(car => car.brand))].slice(0, 12); // pick first 12 brands
            const brandHTML = brands.map(brand => `
                <div class="brand-item" onclick="filterByBrand('${brand}')">
                    <img src="/images/brands/${brand.toLowerCase().replace(/\s/g, '')}.png" alt="${brand}" />
                    <p>${brand}</p>
                </div>
            `).join("");
            document.getElementById("brandGrid").innerHTML = brandHTML;
        }

            renderCars(filtered);
        }

        searchInput.addEventListener("input", filterCars);
        [budgetSelect, typeSelect, fuelSelect, rangeMinInput, rangeMaxInput].forEach(el => el.addEventListener("input", () => {
            rangeMinLabel.textContent = `$${parseInt(rangeMinInput.value).toLocaleString()}`;
            rangeMaxLabel.textContent = `$${parseInt(rangeMaxInput.value).toLocaleString()}`;
            filterCars();
        }));

        btnNew.addEventListener("click", () => {
            btnNew.classList.add("active");
            btnUsed.classList.remove("active");
        });

        btnUsed.addEventListener("click", () => {
            btnUsed.classList.add("active");
            btnNew.classList.remove("active");
        });

        function getUserLocation() {
            if (!navigator.geolocation) return;
            navigator.geolocation.getCurrentPosition(async pos => {
                const { latitude, longitude } = pos.coords;
                const res = await fetch(`https://api.bigdatacloud.net/data/reverse-geocode-client?latitude=${latitude}&longitude=${longitude}&localityLanguage=en`);
                const data = await res.json();
                document.getElementById("locationInput").value = data.city || "Unknown";
            });
        }

        const ads = [
            "🚗 Big Sale on SUVs this weekend!",
            "🛠️ Free first-year service with new cars!",
            "💰 Exchange old car and save!",
            "📅 Visit AutoMart for April deals!"
        ];
        let adIndex = 0;
        setInterval(() => {
            adIndex = (adIndex + 1) % ads.length;
            document.getElementById("adContent").textContent = ads[adIndex];
        }, 3000);
    </script>
</body>
</html>
