@{
    ViewData["Title"] = "Post a New Car";
}
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <title>@ViewData["Title"] - AutoDeals</title>
    <link rel="stylesheet" href="~/css/styles.css" />
</head>
<body>
    <nav>
        <div class="logo-container">
            <img src="~/images/logo.png" alt="AutoDeals Logo" />
        </div>
        <ul class="nav-links">
            <li><a asp-controller="Home" asp-action="Index">Home</a></li>
            <li><a href="/data.html">Cars Data</a></li>
            <li><a asp-controller="Home" asp-action="Create" class="active">Create</a></li>
            <li><a asp-controller="Home" asp-action="Read">Read</a></li>
            <li><a asp-controller="Home" asp-action="Update">Update</a></li>
            <li><a asp-controller="Home" asp-action="Delete">Delete</a></li>
            <li><a asp-controller="Home" asp-action="About">About Us</a></li>
        </ul>
        <div class="auth-links">
            <a asp-controller="Home" asp-action="SignIn">Sign In</a>
            <a asp-controller="Home" asp-action="SignUp">Sign Up</a>
        </div>

    </nav>

    <!-- Form Section -->
    <div class="car-posting-form" id="formSection">
        <h2>Post a New Car</h2>
        <form id="carForm">
            <label for="brand">Brand:</label>
            <input type="text" id="brand" name="brand" required>

            <label for="model">Model:</label>
            <input type="text" id="model" name="model" required>

            <label for="year">Year:</label>
            <input type="number" id="year" name="year" required>

            <label for="price">Price ($):</label>
            <input type="number" id="price" name="price" required>

            <label for="carType">Car Type:</label>
            <select id="carType" name="carType" required>
                <option value="">Select Type</option>
                <option value="SUV">SUV</option>
                <option value="Sedan">Sedan</option>
                <option value="Hatchback">Hatchback</option>
                <option value="Truck">Truck</option>
                <option value="Luxury Sedan">Luxury Sedan</option>
                <option value="Luxury SUV">Luxury SUV</option>
                <option value="Electric SUV">Electric SUV</option>
                <option value="Electric Sedan">Electric Sedan</option>
                <option value="Coupe">Coupe</option>
            </select>

            <label for="fuelType">Fuel Type:</label>
            <select id="fuelType" name="fuelType" required>
                <option value="">Select Fuel Type</option>
                <option value="Gasoline">Gasoline</option>
                <option value="Diesel">Diesel</option>
                <option value="Hybrid">Hybrid</option>
                <option value="Electric">Electric</option>
            </select>

            <label for="mileage">Mileage (in miles):</label>
            <input type="number" id="mileage" name="mileage" required>

            <label for="address">Address:</label>
            <input type="text" id="address" name="address" required>

            <label for="imageInput">Upload Car Image(s):</label>
            <input type="file" id="imageInput" accept="image/*" multiple required>

            <input type="submit" value="Post Car">
        </form>
    </div>

    <!-- Review Section -->
    <div class="review-container" id="reviewSection" style="display: none;">
        <h2 id="reviewTitle">Review Your Car Listing</h2>
        <div id="imagePreview"></div>
        <p id="reviewBrand"></p>
        <p id="reviewModel"></p>
        <p id="reviewYear"></p>
        <p id="reviewPrice"></p>
        <p id="reviewCarType"></p>
        <p id="reviewFuelType"></p>
        <p id="reviewMileage"></p>
        <p id="reviewAddress"></p>
        <button class="confirm-btn" onclick="confirmPost()">Confirm Post</button>
    </div>

    <script>
        document.getElementById("carForm").addEventListener("submit", async function (e) {
            e.preventDefault();

            const imageFiles = document.getElementById("imageInput").files;
            if (imageFiles.length === 0) {
                alert("Please upload at least one image.");
                return;
            }

            const toBase64 = (file) => new Promise((resolve, reject) => {
                const reader = new FileReader();
                reader.readAsDataURL(file);
                reader.onload = () => resolve(reader.result.split(',')[1]);
                reader.onerror = error => reject(error);
            });

            const uploadedUrls = [];

            try {
                for (let i = 0; i < imageFiles.length; i++) {
                    const base64Image = await toBase64(imageFiles[i]);

                    const formData = new FormData();
                    formData.append("key", "46996ce3e2660fcba276709a1a84c3c2");
                    formData.append("image", base64Image);

                    const response = await fetch("https://api.imgbb.com/1/upload", {
                        method: "POST",
                        body: formData,
                    });

                    const data = await response.json();
                    if (!data.success) throw new Error(`Image ${i + 1} failed to upload.`);

                    uploadedUrls.push(data.data.display_url);
                }

                const carDetails = {
                    brand: e.target.brand.value,
                    model: e.target.model.value,
                    year: e.target.year.value,
                    price: e.target.price.value,
                    carType: e.target.carType.value,
                    fuelType: e.target.fuelType.value,
                    mileage: e.target.mileage.value,
                    address: e.target.address.value,
                    imageUrls: uploadedUrls
                };

                showReview(carDetails);
            } catch (err) {
                alert("Error uploading images: " + err.message);
            }
        });

        function showReview(car) {
            document.getElementById("formSection").style.display = "none";
            document.getElementById("reviewSection").style.display = "block";

            const previewDiv = document.getElementById("imagePreview");
            previewDiv.innerHTML = "";

            car.imageUrls.forEach(url => {
                const img = document.createElement("img");
                img.src = url;
                img.alt = "Uploaded Car Image";
                img.classList.add("review-image");
                previewDiv.appendChild(img);
            });

            document.getElementById("reviewBrand").textContent = `Brand: ${car.brand}`;
            document.getElementById("reviewModel").textContent = `Model: ${car.model}`;
            document.getElementById("reviewYear").textContent = `Year: ${car.year}`;
            document.getElementById("reviewPrice").textContent = `Price: $${car.price}`;
            document.getElementById("reviewCarType").textContent = `Car Type: ${car.carType}`;
            document.getElementById("reviewFuelType").textContent = `Fuel Type: ${car.fuelType}`;
            document.getElementById("reviewMileage").textContent = `Mileage: ${car.mileage} miles`;
            document.getElementById("reviewAddress").textContent = `Address: ${car.address}`;
        }

        function confirmPost() {
            alert("Car posted successfully! (Simulation)");
            location.reload(); // Reset the page
        }
    </script>
</body>
</html>
